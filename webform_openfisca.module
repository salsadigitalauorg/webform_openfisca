<?php

/**
 * @file
 * Hooks implemented by the webform_openfisca module.
 */

use Drupal\Core\Cache\Cache;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Render\BubbleableMetadata;
use Drupal\Core\Render\Markup;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_webform_admin_third_party_settings_form_alter().
 *
 * Contains the global/default settings.
 */
function webform_openfisca_webform_admin_third_party_settings_form_alter(&$form, FormStateInterface $form_state) {
  /** @var \Drupal\webform\WebformThirdPartySettingsManagerInterface $third_party_settings_manager */
  $third_party_settings_manager = \Drupal::service('webform.third_party_settings_manager');
  $default_fisca_enabled = $third_party_settings_manager->getThirdPartySetting('webform_openfisca', 'fisca_enabled');
  $default_fisca_endpoint = $third_party_settings_manager->getThirdPartySetting('webform_openfisca', 'fisca_api_endpoint');
  $default_fisca_return_key = $third_party_settings_manager->getThirdPartySetting('webform_openfisca', 'fisca_return_key');
  $default_fisca_mappings = $third_party_settings_manager->getThirdPartySetting('webform_openfisca', 'fisca_field_mappings');
  $fisca_variables = $third_party_settings_manager->getThirdPartySetting('webform_openfisca', 'fisca_variables');

  $form['third_party_settings']['webform_openfisca'] = [
    '#type' => 'details',
    '#title' => t('OpenFisca'),
    '#open' => TRUE,
  ];
  $form['third_party_settings']['webform_openfisca']['fisca_enabled'] = [
    '#type' => 'checkbox',
    '#title' => t('Enable OpenFisca RaC integration'),
    '#description' => '',
    '#default_value' => $default_fisca_enabled,
  ];
  $form['third_party_settings']['webform_openfisca']['fisca_api_endpoint'] = [
    '#type' => 'textfield',
    '#title' => t('OpenFisca API endpoint'),
    '#description' => t('Specify the API endpoint to the Fisca Rule'),
    '#default_value' => $default_fisca_endpoint,
  ];
  $form['third_party_settings']['webform_openfisca']['fisca_return_key'] = [
    '#type' => 'textarea',
    '#title' => t('The keys for the return value'),
    '#description' => t('Specify the keys for the return value that needs to be checked. Comma separated.'),
    '#default_value' => $default_fisca_return_key,
  ];
  $form['third_party_settings']['webform_openfisca']['fisca_field_mappings'] = [
    '#type' => 'textarea',
    '#title' => t('OpenFisca Field mappings'),
    '#description' => t('Specify the field mappings'),
    '#default_value' => $default_fisca_mappings,
  ];
  $form['third_party_settings']['webform_openfisca']['fisca_variables'] = [
    '#type' => 'textarea',
    '#title' => t('OpenFisca Variables'),
    '#description' => t('Specify the variables from OpenFisca API'),
    '#default_value' => $fisca_variables,
  ];
}

/**
 * Implements hook_webform_third_party_settings_form_alter().
 *
 * Contains the per-webform configurables.
 */
function webform_openfisca_webform_third_party_settings_form_alter(&$form, FormStateInterface $form_state) {
  /** @var \Drupal\webform\WebformThirdPartySettingsManagerInterface $third_party_settings_manager */
  $third_party_settings_manager = \Drupal::service('webform.third_party_settings_manager');
  $default_fisca_enabled = $third_party_settings_manager->getThirdPartySetting('webform_openfisca', 'fisca_enabled') ?: [];
  $default_fisca_endpoint = $third_party_settings_manager->getThirdPartySetting('webform_openfisca', 'fisca_api_endpoint') ?: [];
  $default_fisca_return_key = $third_party_settings_manager->getThirdPartySetting('webform_openfisca', 'fisca_return_key') ?: [];
  $default_fisca_mappings = $third_party_settings_manager->getThirdPartySetting('webform_openfisca', 'fisca_field_mappings') ?: [];
  $fisca_variables = $third_party_settings_manager->getThirdPartySetting('webform_openfisca', 'fisca_variables') ?: [];

  /** @var \Drupal\webform\WebformInterface $entity */
  if ($entity = $form_state->getFormObject()->getEntity()) {
    $default_fisca_enabled = $entity->getThirdPartySetting('webform_openfisca', 'fisca_enabled') ?? $default_fisca_enabled;
    $default_fisca_endpoint = $entity->getThirdPartySetting('webform_openfisca', 'fisca_api_endpoint') ?? $default_fisca_endpoint;
    $default_fisca_return_key = $entity->getThirdPartySetting('webform_openfisca', 'fisca_return_key') ?? $default_fisca_return_key;
    $default_fisca_mappings = $entity->getThirdPartySetting('webform_openfisca', 'fisca_field_mappings') ?? $default_fisca_mappings;
    $fisca_variables = $entity->getThirdPartySetting('webform_openfisca', 'fisca_variables') ?? $fisca_variables;
  }

  $form['third_party_settings']['webform_openfisca'] = [
    '#type' => 'details',
    '#title' => t('OpenFisca'),
    '#open' => TRUE,
  ];
  $form['third_party_settings']['webform_openfisca']['fisca_enabled'] = [
    '#type' => 'checkbox',
    '#title' => t('Enable OpenFisca RaC integration'),
    '#description' => '',
    '#default_value' => $default_fisca_enabled,
  ];
  $form['third_party_settings']['webform_openfisca']['fisca_api_endpoint'] = [
    '#type' => 'textfield',
    '#title' => t('OpenFisca API endpoint'),
    '#description' => t('Specify the API endpoint to the Fisca Rule'),
    '#default_value' => $default_fisca_endpoint,
  ];
  $form['third_party_settings']['webform_openfisca']['fisca_return_key'] = [
    '#type' => 'textarea',
    '#title' => t('The keys for the return value'),
    '#description' => t('Specify the keys for the return value that needs to be checked. Comma separated.'),
    '#default_value' => $default_fisca_return_key,
  ];
  $form['third_party_settings']['webform_openfisca']['fisca_field_mappings'] = [
    '#type' => 'textarea',
    '#title' => t('OpenFisca Field mappings'),
    '#description' => t('Specify the field mappings'),
    '#default_value' => $default_fisca_mappings,
  ];
  $form['third_party_settings']['webform_openfisca']['fisca_variables'] = [
    '#type' => 'textarea',
    '#title' => t('OpenFisca Variables'),
    '#description' => t('Specify the variables from OpenFisca API'),
    '#default_value' => $fisca_variables,
  ];

  // @todo Should be a submit handler.
  $form['#validate'][] = '_webform_openfisca_form_submit';
}

/**
 * Submit callback for clearing library_info cache.
 *
 * @param array $form
 *   An associative array containing the structure of the form.
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   The current state of the form.
 *
 * @see \Drupal\webform_entity_print\Plugin\Derivative\WebformEntityPrintWebformExporterDeriver
 */
function _webform_openfisca_form_submit(array &$form, FormStateInterface $form_state) {

  if (!$form_state->hasAnyErrors()) {
    // Invalidate library_info cache tag.
    // @see webform_entity_print_library_info_build()
    Cache::invalidateTags(['library_info']);
  }

}

/**
 * Submit callback for saving a webform element.
 *
 * @param array $form
 *   An associative array containing the structure of the form.
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   The current state of the form.
 *
 * @see \Drupal\webform_entity_print\Plugin\Derivative\WebformEntityPrintWebformExporterDeriver
 */
function _webform_openfisca_form_element_submit(array &$form, FormStateInterface $form_state) {
  $open_fisca_client = \Drupal::service('webform_openfisca.open_fisca_connector_service');

  if ($entity = $form_state->getFormObject()->getWebform()) {

    $key = $form_state->getValue('key');
    $fisca_machine_name = $form_state->getValue('fisca_machine_name');
    $field_mappings = json_decode($entity->getThirdPartySetting('webform_openfisca', 'fisca_field_mappings'), TRUE) ?? [];
    $field_mappings[$key] = $fisca_machine_name;

    $entity->setThirdPartySetting('webform_openfisca', 'fisca_field_mappings', json_encode($field_mappings));

    $api_endpoint = $entity->getThirdPartySetting('webform_openfisca', 'fisca_api_endpoint') ?? '';
    $fisca_variable = $open_fisca_client->openFiscaGetVariable($api_endpoint, $fisca_machine_name);
    $fisca_variables = json_decode($entity->getThirdPartySetting('webform_openfisca', 'fisca_variables'), TRUE) ?? [];
    $fisca_variables[$fisca_machine_name] = $fisca_variable;

    $entity->setThirdPartySetting('webform_openfisca', 'fisca_variables', json_encode($fisca_variables));

    $entity->save();
  }

}

/**
 * Alter webform element form.
 */
function webform_openfisca_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  $open_fisca_client = \Drupal::service('webform_openfisca.open_fisca_connector_service');

  if ($form_id == 'webform_ui_element_form') {
    if ($entity = $form_state->getFormObject()->getWebform()) {
      $enabled = $entity->getThirdPartySetting('webform_openfisca', 'fisca_enabled') ?? FALSE;
      $api_endpoint = $entity->getThirdPartySetting('webform_openfisca', 'fisca_api_endpoint') ?? '';
      $field_mappings = json_decode($entity->getThirdPartySetting('webform_openfisca', 'fisca_field_mappings'), TRUE) ?? [];

      $fObject = $form_state->getFormObject();
      $key = $fObject->getKey();

      // Get the list of variables from Fisca API.
      $fisca_vars = [];
      if (!empty($api_endpoint)) {
        $vars = $open_fisca_client->openFiscaGetVariables($api_endpoint);
        // Allow a generic key to be allocated to identify a person.
        $fisca_vars['_nil'] = '- Exclude from mapping -';
        $fisca_vars['name_key'] = 'Name';
        $fisca_vars['period'] = 'Period';
        foreach ($vars as $k => $var) {
          $fisca_vars[$k] = $k . ": " . $var->description;
        }
      }

      if ($enabled) {
        $form['fisca_machine_name'] = [
          '#type' => 'select',
          '#options' => $fisca_vars,
          '#title' => t('Linked Fisca variable'),
          '#prefix' => '<h2>Fisca enabled!</h2><p>Please provide Fisca variable names to correctly link.</p>',
          '#default_value' => $field_mappings[$key] ?? '',
        ];

        $form['#submit'][] = '_webform_openfisca_form_element_submit';
      }
    }
  }
}

/**
 * Helper to load all enabled fisca endpoints.
 */
function _webform_openfisca_get_all_endpoints() {
  $endpoints = [];
  // Get the webform storage service.
  $webformStorage = \Drupal::entityTypeManager()->getStorage('webform');

  // Load all webforms.
  $webforms = $webformStorage->loadMultiple();

  // Loop through each webform.
  foreach ($webforms as $webform) {
    // Check if the webform has the 'openfisca' enabled.
    $fiscaEnabled = $webform->getThirdPartySetting('webform_openfisca', 'fisca_enabled', FALSE);

    // Check if the 'fisca_api_endpoint' is not empty.
    $fiscaApiEndpoint = $webform->getThirdPartySetting('webform_openfisca', 'fisca_api_endpoint', '');

    if ($fiscaEnabled && !empty($fiscaApiEndpoint)) {
      $endpoints[] = $fiscaApiEndpoint;
    }
  }
  return $endpoints;
}

/**
 * Implements hook_token_info().
 */
function webform_openfisca_token_info() {
  $open_fisca_client = \Drupal::service('webform_openfisca.open_fisca_connector_service');

  $endpoints = _webform_openfisca_get_all_endpoints();

  if (!empty($endpoints)) {
    foreach ($endpoints as $api_endpoint) {
      // Get all parameters.
      $parameters = $open_fisca_client->OpenfiscaGetParameters($api_endpoint);
      foreach ($parameters as $key => $parameter) {
        // $parameter1 = str_replace(".", "/", $key);
        $info['tokens']['webform_openfisca'][$key] = [
          'name' => $parameter['description'],
          'description' => $parameter['description'],
        ];
      }

      // Get all variables.
      $variables = $open_fisca_client->openFiscaGetVariables($api_endpoint);
      foreach ($variables as $key => $variable) {
        $info['tokens']['webform_openfisca'][$key] = [
          'name' => $variable['description'],
          'description' => $variable['description'],
        ];
      }
    }
  }
  $info['types']['webform_openfisca'] = [
    'name' => t('Webform openfisca'),
    'description' => t('Tokens related to webform openfisca.'),
    'needs-data' => 'webform_openfisca',
  ];

  return $info;
}

/**
 * Implements hook_tokens().
 */
function webform_openfisca_tokens($type, $tokens, array $data, array $options, BubbleableMetadata $bubbleable_metadata) {
  $open_fisca_client = \Drupal::service('webform_openfisca.open_fisca_connector_service');

  $replacements = [];

  $endpoints = _webform_openfisca_get_all_endpoints();
  if (!empty($endpoints)) {
    foreach ($endpoints as $api_endpoint) {
      foreach ($tokens as $name => $original) {

        // Get all parameters.
        $parameters = array_keys($open_fisca_client->OpenfiscaGetParameters($api_endpoint));
        foreach ($parameters as $parameter) {
          $formated_parameter = str_replace(".", "/", $parameter);
          $replacement = FALSE;
          if ($name == $parameter) {
            $parameter_endpoint_url = $api_endpoint . '/parameter/' . $formated_parameter;
            $replacement_details = $open_fisca_client->openFiscaGetAttributeDetails($parameter_endpoint_url);
            if (!empty($replacement_details)) {
              $period = \Drupal::request()->query->get('period');
              if (isset($period) && isset($replacement_details->values->$period)) {
                $replacement = $replacement_details->values->$period;
              }
              if (!$replacement) {
                $replacement = reset($replacement_details->values);
              }
              $replacements[$original] = Markup::create((string) $replacement);
            }
          }
        }

        // Get all variables.
        $variables = $open_fisca_client->openFiscaGetVariables($api_endpoint);
        foreach ($variables as $variable) {
          if ($name == $variable) {
            $replacement = \Drupal::request()->query->get($variable);
            $replacements[$original] = Markup::create((string) $replacement);
          }
        }

      }
    }
  }
  return $replacements;
}

/**
 * Implements hook_help().
 */
function webform_openfisca_help($route_name, RouteMatchInterface $route_match) {
  if ($route_name == 'help.page.webform_openfisca') {
    $token_tree = \Drupal::service('token.tree_builder')->buildRenderable(['webform_openfisca'], [
      'click_insert' => FALSE,
      'show_restricted' => TRUE,
      'show_nested' => FALSE,
      'global_types' => FALSE,
    ]);
    $output = '<h3>' . t('About') . '</h3>';
    $output .= '<p>' . t('The <a href=":project">Webform OpenFisca Integration</a> module integrates Drupal Webform functionality with the OpenFisca API, allowing for seamless communication and calculation based on OpenFisca rules.', [':project' => 'https://www.drupal.org/project/webform_openfisca']) . '</p>';
    $output .= '<dl>';
    $output .= '<dt>' . t('The list of the currently available tokens provided by this module are shown below.') . '</dt>';
    $output .= '<dd>' . \Drupal::service('renderer')->render($token_tree) . '</dd>';
    $output .= '</dl>';
    return $output;
  }
}
